{"version":3,"sources":["redux-flow/reducers/tic-tac-toe/actions.js","redux-flow/reducers/tic-tac-toe/action-creators.js","components/Square.js","components/Board.js","redux-flow/reducers/identification/actions.js","redux-flow/reducers/identification/action-creators.js","pages/game.js","pages/menu.js","App.js","domain/game.js","redux-flow/reducers/tic-tac-toe/handlers.js","redux-flow/reducers/tic-tac-toe/index.js","redux-flow/reducers/identification/handlers.js","redux-flow/reducers/identification/index.js","redux-flow/reducers/index.js","nun.js","redux-flow/configuration/devtools.js","index.js","redux-flow/configuration/index.js"],"names":["TIC_TAC_TOE_PREFIX","RESET_GAME","FILL_SQUARE","JOIN","JOIN_ROOM","SYNC_GAME_STATE","join","player","type","payload","Container","styled","div","squareSize","Square","children","onClick","boardSize","Board","board","useSelector","state","ticTacToe","userName","identification","dispatch","useDispatch","map","row","rowIndex","symbol","columnIndex","column","fillSquare","String","SET_IDENTIFICATION","SET_ROOM","setRoom","room","duringGameMessage","GamePage","winner","plays","maxPlays","X","O","roomName","useParams","useState","message","setMessage","useEffect","winMessage","joinRoom","MenuPage","store","htmlFor","name","onInput","e","target","value","to","preventDefault","App","path","symbols","Object","freeze","initialState","Array","fill","firstSymbol","id","Date","getTime","nextSymbol","computeWinnerSymbol","rows","columns","getBoardColumns","diagonals","getBoardDiagonals","squareGroups","computeSquaresGroupsWinnerSymbol","squaresGroups","find","squaresGroup","targetSymbol","every","reduce","i","getBoardDescendingDiagonal","getBoardAscendingDiagonal","_","valueIndex","length","canFillSquare","rightPlayer","getNextPlayer","notFilled","notOver","getPlayerFromSymbol","computeNewBoard","oldRow","oldRowIndex","oldValue","oldValueIndex","computeNextSymbol","playsAfterSquaredIsFilled","computePlays","symbolQuantity","handleResetState","handleFillSquare","action","newBoard","winnerSymbol","tryToFillSquare","handleJoin","hasX","playerSymbol","handleJoinRoom","handleSyncGameState","handleSetIdentification","handleSetRoom","combineReducers","nun","NunDb","ticTacToeAction","RegExp","dbMiddleware","next","myPlayerId","getState","getValue","then","syncGameState","catch","watch","nunAction","playerId","test","tmpAction","setValue","devtools","window","__REDUX_DEVTOOLS_EXTENSION__","x","createStore","rootReducer","compose","applyMiddleware","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79ae61d1.chunk.js","sourcesContent":["export const TIC_TAC_TOE_PREFIX = '@@tic-tac-toe';\nexport const RESET_GAME = `${TIC_TAC_TOE_PREFIX}:RESET_GAME`;\nexport const FILL_SQUARE = `${TIC_TAC_TOE_PREFIX}:FILL_SQUARE`;\nexport const JOIN = `${TIC_TAC_TOE_PREFIX}:JOIN`;\nexport const JOIN_ROOM = `${TIC_TAC_TOE_PREFIX}:JOIN_ROOM`;\nexport const SYNC_GAME_STATE = `${TIC_TAC_TOE_PREFIX}:SYNC_GAME_STATE`;\n","import {\n  RESET_GAME,\n  FILL_SQUARE,\n  JOIN,\n  JOIN_ROOM,\n  SYNC_GAME_STATE,\n} from './actions';\n\nexport const joinRoom = (roomName) => ({\n  type: JOIN_ROOM,\n  payload: {\n    roomName,\n  },\n});\n\nexport const resetGame = (boardSize) => ({\n  type: RESET_GAME,\n  payload: {\n    boardSize,\n  },\n});\n\nexport const fillSquare = ({ row, column, player }) => ({\n  type: FILL_SQUARE,\n  payload: {\n    row, column, player,\n  },\n});\n\nexport const join = (player) => ({\n  type: JOIN,\n  payload: {\n    player,\n  },\n});\n\nexport const syncGameState = (state) => ({\n  type: SYNC_GAME_STATE,\n  payload: {\n    state,\n  },\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n    width: ${({ squareSize }) => `${squareSize - 2}px`};\n    height: ${({ squareSize }) => `${squareSize - 2}px`};\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    font-size: 2.5em;\n\n    border: solid 1px black;\n\n    /* guarantee no text selection  */\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently */\n`;\n\nconst Square = ({ children, squareSize, onClick }) => (\n  <Container\n    squareSize={squareSize}\n    onClick={onClick}\n  >\n    {children}\n  </Container>\n);\n\nSquare.propTypes = {\n  squareSize: PropTypes.number.isRequired,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Square;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { fillSquare } from '../redux-flow/reducers/tic-tac-toe/action-creators';\nimport Square from './Square';\n\nconst Container = styled.div`\n    height: ${({ boardSize }) => `${boardSize}px`};\n    width: ${({ boardSize }) => `${boardSize}px`};\n\n    display: flex;\n    flex-direction: row;\n    align-items: space-around;\n    justify-content: center;\n    flex-wrap: wrap;\n`;\n\nconst boardSize = 300;\nconst squareSize = boardSize / 3;\n\nconst Board = () => {\n  const { board } = useSelector((state) => state.ticTacToe);\n  const { userName } = useSelector((state) => state.identification);\n  const dispatch = useDispatch();\n\n  return (\n    <Container boardSize={boardSize}>\n      {board.map((row, rowIndex) => row.map((symbol, columnIndex) => (\n        <Square\n          squareSize={squareSize}\n          key={String(rowIndex) + String(columnIndex)}\n          onClick={() => {\n            dispatch(fillSquare({\n              column: columnIndex,\n              row: rowIndex,\n              player: userName,\n            }));\n          }}\n        >\n          {symbol}\n        </Square>\n      )))}\n    </Container>\n  );\n};\n\nexport default Board;\n","export const SET_IDENTIFICATION = '@@identification:SET_IDENTIFICATION';\nexport const SET_ROOM = '@@identification:SET_ROOM';\n","import {\n  SET_IDENTIFICATION,\n  SET_ROOM,\n} from './actions';\n\nexport const setIdentification = (userName) => ({\n  type: SET_IDENTIFICATION,\n  payload: {\n    userName,\n  },\n});\n\nexport const setRoom = (room) => ({\n  type: SET_ROOM,\n  payload: {\n    room,\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport Board from '../components/Board';\nimport { resetGame, joinRoom } from '../redux-flow/reducers/tic-tac-toe/action-creators';\nimport { setRoom } from '../redux-flow/reducers/identification/action-creators';\n\nconst Container = styled.div`\n  width: 95vw;\n  height: 95vh;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  font-family: sans-serif;\n`;\n\nconst duringGameMessage = 'Click a square';\nconst drawMessage = 'No winner';\nconst winMessage = (winner) => `Winner: ${winner}`;\n\nconst GamePage = () => {\n  const {\n    winner,\n    plays,\n    maxPlays,\n    X,\n    O,\n  } = useSelector((state) => state.ticTacToe);\n  const { userName } = useSelector((state) => state.identification);\n  const { roomName } = useParams();\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState(duringGameMessage);\n\n  useEffect(() => {\n    if (winner) {\n      return setMessage(winMessage(winner));\n    }\n    if (plays >= maxPlays) {\n      return setMessage(drawMessage);\n    }\n    return setMessage(duringGameMessage);\n  }, [winner, plays, maxPlays]);\n\n  useEffect(() => {\n    dispatch(setRoom(roomName));\n    dispatch(joinRoom(roomName));\n  }, []);\n\n  return (\n    <Container>\n      <p>\n        {userName\n          ? `Your user name: ${userName}`\n          : \"You're viewing the game as a guest\"}\n      </p>\n      <p>\n        Player X:\n        {' '}\n        {X}\n      </p>\n      <p>\n        Player O:\n        {' '}\n        {O}\n      </p>\n      <Board />\n      <p>{message}</p>\n      <button type=\"button\" onClick={() => dispatch(resetGame())}>Reset Game</button>\n    </Container>\n  );\n};\n\nexport default GamePage;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { setIdentification, setRoom } from '../redux-flow/reducers/identification/action-creators';\n\nconst Container = styled.div`\n  width: 95vw;\n  height: 95vh;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  font-family: sans-serif;\n`;\n\nconst MenuPage = () => {\n  const { room: roomName } = useSelector((store) => store.identification);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <div>\n        <label htmlFor=\"userName\">\n          <p>\n            Type in your username:\n          </p>\n          <input name=\"userName\" onInput={(e) => dispatch(setIdentification(e.target.value))} />\n        </label>\n      </div>\n      <div>\n        <label htmlFor=\"roomName\">\n          <p>\n            Type in the room name:\n          </p>\n          <input name=\"roomName\" onInput={(e) => dispatch(setRoom(e.target.value))} />\n        </label>\n        <Link\n          to={`/room/${roomName}`}\n          onClick={(e) => {\n            if (!roomName) {\n              e.preventDefault();\n            }\n          }}\n        >\n          <p>Join room</p>\n        </Link>\n      </div>\n    </Container>\n  );\n};\n\nexport default MenuPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport GamePage from './pages/game';\nimport MenuPage from './pages/menu';\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/room/:roomName\">\n        <GamePage />\n      </Route>\n      <Route path=\"/\">\n        <MenuPage />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","export const symbols = Object.freeze(['X', 'O']);\n\nexport const initialState = () => {\n  const BOARD_SIZE = 3;\n  const maxPlays = BOARD_SIZE ** 2;\n  const rows = new Array(BOARD_SIZE).fill([]);\n  const board = rows.map(() => new Array(BOARD_SIZE).fill(''));\n  const [firstSymbol] = symbols;\n  return {\n    id: (new Date().getTime()),\n    X: null,\n    O: null,\n    winner: null,\n    roomName: null,\n    maxPlays,\n    board,\n    nextSymbol: firstSymbol,\n    plays: 0,\n  };\n};\n\nexport const joinRoom = ({ state, roomName }) => ({\n  ...state,\n  roomName,\n});\n\nexport const join = ({ state, player }) => {\n  const hasX = !!state.X;\n  if (state.X && state.O) return state;\n  if (hasX && state.X === player) return state;\n  const playerSymbol = hasX ? 'O' : 'X';\n  return {\n    ...state,\n    [playerSymbol]: player,\n  };\n};\n\nexport const tryToFillSquare = ({\n  state, row, column, player,\n}) => {\n  if (!canFillSquare({\n    state, row, column, player,\n  })) {\n    return state;\n  }\n  const newBoard = computeNewBoard({ state, row, column });\n  const winnerSymbol = computeWinnerSymbol(newBoard);\n  const winner = getPlayerFromSymbol({ state, symbol: winnerSymbol });\n\n  return ({\n    ...state,\n    board: newBoard,\n    nextSymbol: computeNextSymbol(state),\n    plays: computePlays(state),\n    winner,\n  });\n};\n\nconst computeWinnerSymbol = (board) => {\n  const rows = [...board];\n  const columns = getBoardColumns(board);\n  const diagonals = getBoardDiagonals(board);\n  const squareGroups = [\n    ...rows,\n    ...columns,\n    ...diagonals,\n  ];\n  const winnerSymbol = computeSquaresGroupsWinnerSymbol(squareGroups);\n  return winnerSymbol;\n};\n\nconst computeSquaresGroupsWinnerSymbol = (squaresGroups) => squaresGroups\n  .find((squaresGroup) => {\n    const [targetSymbol] = squaresGroup;\n    return squaresGroup.every((value) => value !== '' && value === targetSymbol);\n  })?.[0];\n\nconst getBoardColumns = (board) => board\n  .reduce((columns, row) => [0, 1, 2]\n    .map((i) => [...columns[i], row[i]]), [[], [], []]);\n\nconst getBoardDiagonals = (board) => {\n  const descendingDiagonal = getBoardDescendingDiagonal(board);\n  const ascendingDiagonal = getBoardAscendingDiagonal(board);\n  return [descendingDiagonal, ascendingDiagonal];\n};\n\nconst getBoardDescendingDiagonal = (board) => board\n  .map((row, rowIndex) => row.find((_, valueIndex) => valueIndex === rowIndex));\n\nconst getBoardAscendingDiagonal = (board) => board\n  .map((row, rowIndex) => row.find((_, valueIndex) => valueIndex + rowIndex === board.length - 1));\n\nconst canFillSquare = ({\n  state, row, column, player,\n}) => {\n  const nextPlayer = getNextPlayer(state);\n  const rightPlayer = player === nextPlayer;\n  const notFilled = !state.board[row][column];\n  const notOver = !state.winner;\n  return rightPlayer && notFilled && notOver;\n};\n\nconst getNextPlayer = (state) => getPlayerFromSymbol({ state, symbol: state.nextSymbol });\n\nconst getPlayerFromSymbol = ({ state, symbol }) => state[symbol] || null;\n\nconst computeNewBoard = ({ state, row, column }) => state.board.map((oldRow, oldRowIndex) => {\n  if (oldRowIndex !== row) {\n    return oldRow;\n  }\n\n  return oldRow.map((oldValue, oldValueIndex) => {\n    if (oldValueIndex === column) {\n      return state.nextSymbol;\n    }\n    return oldValue;\n  });\n});\n\nconst computeNextSymbol = (state) => {\n  const playsAfterSquaredIsFilled = computePlays(state);\n  const symbolQuantity = symbols.length;\n  const nextSymbolIndex = playsAfterSquaredIsFilled % symbolQuantity;\n  return symbols[nextSymbolIndex];\n};\n\nconst computePlays = (state) => state.plays + 1;\n","import {\n  initialState,\n  tryToFillSquare,\n  join,\n  joinRoom,\n} from '../../../domain/game';\n\nexport const handleResetState = () => initialState();\n\nexport const handleFillSquare = (state, action) => {\n  const { row, column, player } = action.payload;\n  const newState = tryToFillSquare({\n    state,\n    row,\n    column,\n    player,\n  });\n  return newState;\n};\n\nexport const handleJoin = (state, action) => {\n  const { player } = action.payload;\n  const newState = join({ state, player });\n  return newState;\n};\n\nexport const handleJoinRoom = (state, action) => {\n  const { roomName } = action.payload;\n  const newState = joinRoom({ state, roomName });\n  return newState;\n};\n\nexport const handleSyncGameState = (_, action) => action.payload.state;\n","import {\n  FILL_SQUARE,\n  RESET_GAME,\n  JOIN,\n  JOIN_ROOM,\n  SYNC_GAME_STATE,\n} from './actions';\nimport {\n  handleResetState,\n  handleFillSquare,\n  handleJoin,\n  handleJoinRoom,\n  handleSyncGameState,\n} from './handlers';\nimport { initialState } from '../../../domain/game';\n\nconst ticTacToe = (state = initialState(), action) => {\n  switch (action.type) {\n    case RESET_GAME:\n      return handleResetState(state, action);\n    case FILL_SQUARE:\n      return handleFillSquare(state, action);\n    case JOIN:\n      return handleJoin(state, action);\n    case JOIN_ROOM:\n      return handleJoinRoom(state, action);\n    case SYNC_GAME_STATE:\n      return handleSyncGameState(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default ticTacToe;\n","export const handleSetIdentification = (state, action) => {\n  const { userName } = action.payload;\n  return {\n    ...state,\n    userName,\n  };\n};\n\nexport const handleSetRoom = (state, action) => {\n  const { room } = action.payload;\n  return {\n    ...state,\n    room,\n  };\n};\n","import { SET_IDENTIFICATION, SET_ROOM } from './actions';\nimport { handleSetIdentification, handleSetRoom } from './handlers';\n\nconst identification = (state = {}, action) => {\n  switch (action.type) {\n    case SET_IDENTIFICATION:\n      return handleSetIdentification(state, action);\n    case SET_ROOM:\n      return handleSetRoom(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default identification;\n","import { combineReducers } from 'redux';\nimport ticTacToe from './tic-tac-toe';\nimport identification from './identification';\n\nexport default combineReducers({\n  ticTacToe,\n  identification,\n});\n","import NunDb from 'nun-db';\nimport { syncGameState, join } from './redux-flow/reducers/tic-tac-toe/action-creators';\nimport { TIC_TAC_TOE_PREFIX, JOIN_ROOM } from './redux-flow/reducers/tic-tac-toe/actions';\n\nconst nun = new NunDb('wss://ws.nundb.org', 'tic-tac-toe', 'tic-tac-toe12i3ukjsd');\n\nconst ticTacToeAction = new RegExp(`^${TIC_TAC_TOE_PREFIX}`);\nconst dbMiddleware = (store) => (next) => (action) => {\n  next(action);\n  const myPlayerId = store.getState().ticTacToe.id;\n  const roomName = store.getState().identification.room;\n  if (action.type === JOIN_ROOM) {\n    nun.getValue(roomName).then((state) => {\n      store.dispatch(syncGameState(state.ticTacToe));\n      store.dispatch(join(store.getState().identification.userName));\n    }).catch(() => {\n      // in case the room wasn't created yet\n      store.dispatch(join(store.getState().identification.userName));\n    });\n\n    nun.watch(`lastEvent-${roomName}`, (nunAction) => {\n      if (nunAction.playerId === myPlayerId) {\n        return false;\n      }\n\n      if (ticTacToeAction.test(nunAction.value.type)) {\n        store.dispatch(nunAction.value);\n      }\n      return true;\n    });\n    return;\n  }\n  if (ticTacToeAction.test(action.type) && !action.playerId) {\n    const tmpAction = { ...action, playerId: myPlayerId };\n    nun.setValue(`lastEvent-${roomName}`, tmpAction);\n    nun.setValue(store.getState().identification.room, store.getState());\n  }\n};\n\nexport {\n  nun,\n  dbMiddleware,\n};\n","/* eslint-disable no-underscore-dangle */\nconst devtools = () => (window.__REDUX_DEVTOOLS_EXTENSION__\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\n  : (x) => x);\n/* eslint-enable */\n\nexport default devtools;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './redux-flow/configuration';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport { dbMiddleware } from '../../nun';\nimport devtools from './devtools';\n\nexport default ({ initialState } = {}) => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(dbMiddleware),\n      devtools(),\n    ),\n  );\n\n  return store;\n};\n"],"sourceRoot":""}